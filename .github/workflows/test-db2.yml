# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
name: test-db2
on:
  push:
  pull_request:
  schedule:
    - cron: "0 5 * * *"
jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        distribution: [ 'zulu' ]
        java: [ '8' ]
    name: Java ${{ matrix.Java }} (${{ matrix.distribution }}) sample

    services:

      db2:
        image: ibmcom/db2:latest
        ports:
          - 50000:50000
        env:
          DB2INST1_PASSWORD: db2inst1-pwd
          LICENSE: accept
          DBNAME: db2inst1
        options: >-
          --name dbfitdb2
          --privileged

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Wait for database containers initialization
      run: |
        for i in {1..60}; do echo "$i waiting for DB2 server startup"; docker logs dbfitdb2 2>&1 | grep 'Setup has completed' && echo "[DB2 UP]" && break || sleep 6; done

    - name: Copy database scripts
      run: |
        docker ps -a
        docker cp test_vm/scripts/db2 dbfitdb2:/tmp/dbfit_setup

    - name: Db2 schemas setup
      run: docker exec -w /tmp/dbfit_setup dbfitdb2 /bin/bash -i ./create_db_schema.sh

    - name: Set up java
      uses: actions/setup-java@v2
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}

    - name: Db2 integration tests
      run: ./gradlew :dbfit-java:db2:integrationTest

    - name: Setup diag logs
      if: always()
      run: |
        mkdir diag
        test -d tmp || mkdir tmp
        docker logs dbfitdb2 > diag/dbfitdb2.log 2>&1

    - name: Upload test Artifact
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: diagnostics
        path: |
          ${{ github.workspace }}/diag
          ${{ github.workspace }}/tmp
        retention-days: 1
